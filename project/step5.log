(base) mozaki@goku:~/001_CODE/900_Study/000_udacity/001_cloud_fundation/nd064_course_1/project$ vagrant reload
==> default: Attempting graceful shutdown of VM...
==> default: Forcing shutdown of VM...
==> default: Checking if box 'opensuse/Leap-15.2.x86_64' version '15.2.31.632' is up to date...
==> default: Clearing any previously set forwarded ports...
==> default: Fixed port collision for 22 => 2222. Now on port 2202.
==> default: Clearing any previously set network interfaces...
==> default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: hostonly
==> default: Forwarding ports...
    default: 8080 (guest) => 8081 (host) (adapter 1)
    default: 6111 (guest) => 6121 (host) (adapter 1)
    default: 6112 (guest) => 6122 (host) (adapter 1)
    default: 22 (guest) => 2202 (host) (adapter 1)
==> default: Running 'pre-boot' VM customizations...
==> default: Booting VM...
==> default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2202
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Warning: Connection reset. Retrying...
    default: Warning: Remote connection disconnect. Retrying...
==> default: Machine booted and ready!
==> default: Checking for guest additions in VM...
    default: The guest additions on this VM do not match the installed version of
    default: VirtualBox! In most cases this is fine, but in rare cases it can
    default: prevent things such as shared folders from working properly. If you see
    default: shared folder errors, please make sure the guest additions within the
    default: virtual machine match the version of VirtualBox you have installed on
    default: your host and reload your VM.
    default: 
    default: Guest Additions Version: 6.1.30
    default: VirtualBox Version: 7.0
==> default: Configuring and enabling network interfaces...
==> default: Rsyncing folder: /home/mozaki/001_CODE/900_Study/000_udacity/001_cloud_fundation/nd064_course_1/project/ => /vagrant
==> default: Machine already provisioned. Run `vagrant provision` or use the `--provision`
==> default: flag to force provisioning. Provisioners marked to run always will still run.
(base) mozaki@goku:~/001_CODE/900_Study/000_udacity/001_cloud_fundation/nd064_course_1/project$ vagrant ssh
Last login: Sat Aug 17 15:44:43 2024 from 10.0.2.2
Have a lot of fun...
vagrant@localhost:~> sudo su
localhost:/home/vagrant # export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
(failed reverse-i-search)`': export KUBECONFIG=/etc/rancher/k3s/k3^Cyaml
localhost:/home/vagrant # helm uninstall techtrends
Error: uninstall: Release not loaded: techtrends: release: not found
localhost:/home/vagrant # helm uninstall techtrends
Error: uninstall: Release not loaded: techtrends: release: not found
localhost:/home/vagrant # helm install techtrends /vagrant/helm
NAME: techtrends
LAST DEPLOYED: Sat Aug 17 15:48:12 2024
NAMESPACE: default
STATUS: deployed
REVISION: 1
TEST SUITE: None
localhost:/home/vagrant # 
localhost:/home/vagrant # helm install techtrends /vagrant/helm
Error: INSTALLATION FAILED: cannot re-use a name that is still in use
localhost:/home/vagrant # kubectl get pods -n sandbox
n sandbox
NAME                                     READY   STATUS    RESTARTS   AGE
techtrends-deployment-78cd587794-87jtt   1/1     Running   0          26s
localhost:/home/vagrant # kubectl get services -n sandbox
NAME                 TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)    AGE
techtrends-service   ClusterIP   10.43.156.62   <none>        4111/TCP   26s
localhost:/home/vagrant # kubectl logs <pod-name> -n sandbox
bash: pod-name: No such file or directory
localhost:/home/vagrant # kubectl logs techtrends-deployment-78cd587794-87jtt -n sandbox
 * Serving Flask app 'app' (lazy loading)
 * Environment: production
   WARNING: This is a development server. Do not use it in a production deployment.
   Use a production WSGI server instead.
 * Debug mode: off
WARNING:werkzeug: * Running on all addresses.
   WARNING: This is a development server. Do not use it in a production deployment.
INFO:werkzeug: * Running on http://10.42.0.58:3111/ (Press CTRL+C to quit)
INFO:td_app:/healthz response: {'result': 'OK - healthy'}
INFO:werkzeug:10.42.0.1 - - [17/Aug/2024 15:48:14] "GET /healthz HTTP/1.1" 200 -
INFO:td_app:/healthz response: {'result': 'OK - healthy'}
INFO:werkzeug:10.42.0.1 - - [17/Aug/2024 15:48:22] "GET /healthz HTTP/1.1" 200 -
INFO:td_app:/healthz response: {'result': 'OK - healthy'}
INFO:werkzeug:10.42.0.1 - - [17/Aug/2024 15:48:22] "GET /healthz HTTP/1.1" 200 -
INFO:td_app:/healthz response: {'result': 'OK - healthy'}
INFO:werkzeug:10.42.0.1 - - [17/Aug/2024 15:48:32] "GET /healthz HTTP/1.1" 200 -
INFO:td_app:/healthz response: {'result': 'OK - healthy'}
INFO:werkzeug:10.42.0.1 - - [17/Aug/2024 15:48:32] "GET /healthz HTTP/1.1" 200 -
INFO:td_app:/healthz response: {'result': 'OK - healthy'}
INFO:werkzeug:10.42.0.1 - - [17/Aug/2024 15:48:42] "GET /healthz HTTP/1.1" 200 -
INFO:td_app:/healthz response: {'result': 'OK - healthy'}
INFO:werkzeug:10.42.0.1 - - [17/Aug/2024 15:48:42] "GET /healthz HTTP/1.1" 200 -
localhost:/home/vagrant # 
